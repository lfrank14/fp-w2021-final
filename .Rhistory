left_join(a,b, by = "year", suffix = c("_group", "_total"))
left_join(a,b, by = "year",
suffix = c("_group", "_total"))
total_grouping <- function(data, var, grouping){
a <- count(data, var, grouping)
b <- count(data, var)
c <- left_join(a,b,by = "year",
suffix = c("_group", "_total"))
na.omit(c)
}
total_grouping(data, "year", "gender")
total_grouping(data, year, gender)
total_grouping <- function(data, var, grouping){
a <- count(data, var, grouping)
b <- count(data, var)
c <- left_join(a,b,by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
tibble(var1 = "x",
var2 = "y")
my_df <- tibble(var1 = "x",
var2 = "y")
df <- tibble(var1 = "x",
var2 = "y")
df[x]
df["x"]
df <- tibble(var1 = "x",
var2 = "y")
df["x"]
df[var1]
df["var1"]
df$var1
df[,x]
df[,x, drop=FALSE]
df <- data.frame(var1 = "x",
var2 = "y")
df[,x, drop=FALSE]
df <- data.frame(y = "x",
var2 = "y")
df$var1
df[,x, drop=FALSE]
d <- data.frame(x = 1, y = 2)
x <- "y"
d
d[, x, drop=FALSE]
d
x <- "variable name"
d[, x, drop=FALSE]
x <- "y"
d[, x, drop=FALSE]
x <- "g"
d[, x, drop=FALSE]
x <- "x"
d[, x, drop=FALSE]
?count
total_grouping <- function(data, var, grouping){
a <- count(data, var, grouping) # Use !! and the the quoted variables
b <- count(data, var)
b <- rename(b, "total" = "n")
c <- left_join(a,b)
na.omit(c)
}
total_grouping(data, "year", "gender")
data
split(data, data[gender])
split(data, data["gender"])
split_df <- split(data, data["gender"])
vapply(split_df, nrow, FUN.VALUE = integer(1))
split_df <- split(data, data["var"])
vapply(split_df, nrow, FUN.VALUE = integer(1))
split_df <- split(data, data["year"])
vapply(split_df, nrow, FUN.VALUE = integer(1))
?split
split_df <- split(data, c(data["year"],data["gender"]))
vapply(split_df, nrow, FUN.VALUE = integer(1))
map(split_df, nrow)
map_df(split_df, nrow)
map(split_df, nrow)
vapply(split_df, nrow, FUN.VALUE = integer(1))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
data["year"]
unique(data["year"]
unique(data["year"])
years <- unique(data["year"])
years <- unique(data["year"])
genders <- unique(data["gender"])
years
genders
left_join(years, gender)
left_join(data$years, data$gender)
left_join(data$years, data$gender)
left_join(as.data.frame(data$years), as.data.frame(data$gender))
cbind.data.frame(years, genders)
cbind.data.frame(years, rep(genders[1], length(years)),
rep(genders[2], length(years)))
genders_col <- c(rep(genders[1], length(years)),
rep(genders[2], length(years)))
genders_col <- c(rep(genders[1], length(years)),
rep(genders[2], length(years)))
genders[1]
years <- unique(data["year"])
genders <- unique(data["gender"])
genders_col <- c(rep(genders[1], length(years)),
rep(genders[2], length(years)))
years
genders_col <- c(rep(genders[,1], length(years)),
rep(genders[,2], length(years)))
genders_col <- c(rep(genders[,1], length(years)),
rep(genders[,2], length(years)))
genders_col <- c(rep(genders[1,], length(years)),
rep(genders[2,], length(years)))
genders_col
genders_col <- c(rep(genders[1,], length(years)),
rep(genders[2,], length(years)))
length(years)
genders_col <- c(rep(genders[1,], nrow(years)),
rep(genders[2,], nrow(years)))
gender_col
genders_col
cbind.data.frame(years, genders_col)
df <- data.frame(year = years,
gender= genders_col,
counts = counts)
df
split_df <- split(data, c(data["year"],data["gender"]))
map(split_df, nrow)
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
counts
split_df_2 <- split(data, c(data["year"]))
split_df <- split(data, c(data["year"],data["gender"]))
map_df(split_df, nrow)
split_df_2 <- split(data, c(data["year"]))
map_df(split_df2, nrow)
split_df_2 <- split(data, c(data["year"]))
map_df(split_df_2, nrow)
t(map_df(split_df, nrow)_
t(map_df(split_df, nrow))
?left_join
split_df <- split(data, c(data["year"],data["gender"]))
split_df <- split(data, c(data["year"],data["gender"]))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
counts
split_df
tibble::tibble(
var_levels = names(counts),
count = counts
)
tibble::tibble(
var_names = names(counts),
count = counts
)
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("A", "B"))
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("A", "B"), sep = "([.])")
split_df_2 <- split(data, c(data["year"]))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble::tibble(
var_names = names(counts),
count = counts)
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble::tibble(
var_names = names(counts),
count = counts)
counts <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble::tibble(
var_names = names(counts),
count = counts)
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("A", "B"), sep = "([.])")
# Working out a solution with one example
split_df <- split(data, c(data["year"],data["gender"]))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("A", "B"), sep = "([.])")
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "([.])")
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "(.)")
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = ".")
tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
split_df_2 <- split(data, c(data["year"]))
tibble::tibble(
year = names(counts_2),
count = counts_2)
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble::tibble(
year = names(counts_2),
count = counts_2)
tibble_1 <- tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
tibble_2 <- split_df_2 <- split(data, c(data["year"]))
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble::tibble(
year = names(counts_2),
count = counts_2)
split_2 <- split_df_2 <- split(data, c(data["year"]))
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble::tibble(
year = names(counts_2),
count = counts_2)
tibble_2 <-tibble::tibble(
year = names(counts_2),
count = counts_2)
View(tibble_2)
left_join(tibble_1,tibble_2)
count(data, year, gender)
# Working out a solution with one example
split_df <- split(data, c(data["year"],data["gender"]))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble_1 <- tibble::tibble(
var_names = names(counts),
count = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
split_2 <- split_df_2 <- split(data, c(data["year"]))
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble_2 <-tibble::tibble(
year = names(counts_2),
count = counts_2)
left_join(tibble_1,tibble_2)
tibble_1
tibble_2
left_join(tibble_1,tibble_2, by = year)
left_join(tibble_1,tibble_2, by = "year")
left_join(tibble_1,tibble_2, by = "year",
suffix = c("_group", "_total"))
# Working out a solution with one example
split_df <- split(data, c(data["year"],data["gender"]))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble_1 <- tibble::tibble(
var_names = names(counts),
n = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
split_2 <- split_df_2 <- split(data, c(data["year"]))
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble_2 <-tibble::tibble(
year = names(counts_2),
n = counts_2)
left_join(tibble_1,tibble_2, by = "year",
suffix = c("_group", "_total"))
split(data, c(data$var,data$grouping)
split(data, c(data$var,data$grouping))
data
split(data, c(data$year,data$gender))
total_grouping <- function(data, var, grouping){
split_df <- split(data, c(data$var,data$grouping))
counts <- vapply(split_df, nrow, FUN.VALUE = integer(1))
tibble_1 <- tibble::tibble(
var_names = names(counts),
n = counts) %>%
separate(var_names, c("year", "gender"), sep = "[.]")
split_2 <- split_df_2 <- split(data, data$year)
counts_2 <- vapply(split_df_2, nrow, FUN.VALUE = integer(1))
tibble_2 <-tibble::tibble(
year = names(counts_2),
n = counts_2)
left_join(tibble_1,tibble_2, by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
split(data, c(data$gender,data$year))
total_grouping(data, "year", "gender")
total_grouping(data, year, gender)
total_grouping <- function(data, var, grouping){
a <- count(data, var, grouping)
b <- count(data, var)
c <- left_join(a,b,by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
total_grouping(data, data$year, data$gender)
body(select)
body(dplyr::select)
body(group_by)
total_grouping <- function(data, var, grouping){
a <- count(data, {{var}}, {{grouping}})
b <- count(data, {{var}})
c <- left_join(a,b,by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
total_grouping <- function(data, var, grouping){
a <- count(data, {{var}}, {{grouping}})
b <- count(data, {{var}})
left_join(a,b,by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
total_grouping <- function(data, var, grouping){
v1 <- enquo(var)  #quote the variables
v2 <- enquo(grouping)
a <- count(data, !!v1, !!v2) # use !! to evaluate the quoted variables
b <- count(data, !!v1)
left_join(a,b,by = "year",
suffix = c("_group", "_total"))
}
total_grouping(data, year, gender)
total_grouping(data, year, race_ethnic) %>%
head(10)
total_grouping(data, year, race_ethnic) %>%
head()
total_grouping(data, year, food_security) %>%
head()
total_grouping(data, year, gender)
total_grouping(data, year, race_ethnic) %>%
head()
total_grouping(data, year, food_security) %>%
head()
total_grouping(data, year, gender) %>%
mutate(percent = n/total * 100,
percent = round(percent, 2),
percent = paste0(percent, "%"))
total_grouping(data, year, gender)
total_grouping(data, year, gender) %>%
mutate(percent = n_group/n_total * 100,
percent = round(percent, 2),
percent = paste0(percent, "%"))
percent_grouping <- function(data, var, grouping){
v1 <- enquo(var)
v2 <- enquo(grouping)
total_grouping(data, var, grouping) %>%
mutate(percent = n/total * 100,
percent = round(percent, 2),
percent = paste0(percent, "%"))
}
percent_grouping(data, year, gender)
percent_grouping <- function(data, var, grouping){
total_grouping(data, {{var}}, {{grouping}}) %>%
mutate(percent = n_group/n_total * 100,
percent = round(percent, 2),
percent = paste0(percent, "%"))
}
percent_grouping(data, year, gender)
percent_grouping(data, year, gender) %>% head()
percent_grouping(data, year, race_ethnic) %>% head()
temp_table <- percent_grouping(data, year, gender) %>%
select(year, gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
table <- temp_table[2:3,]
colnames(table) <- temp_table[1,]
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(0, angle = -45)
my_table <- function(data, var, grouping){
temp_table <- percent_grouping(data, {{var}}, {{grouping}}) %>%
select({{var}}, {{grouping}}, percent) %>%
pivot_wider(names_from = !!v2,
values_from = percent) %>% t(.)
table <- temp_table[2:nrow(temp_table),]
colnames(table) <- temp_table[1,]
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(0, angle = -45)
}
my_table(data, year, gender)
my_table <- function(data, var, grouping){
temp_table <- percent_grouping(data, {{var}}, {{grouping}}) %>%
select({{var}}, {{grouping}}, percent) %>%
pivot_wider(names_from = {{grouping}},
values_from = percent) %>% t(.)
table <- temp_table[2:nrow(temp_table),]
colnames(table) <- temp_table[1,]
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(0, angle = -45)
}
my_table(data, year, gender)
my_table(data, year, race_ethnic)
my_table(data, year, food_security)
map(c(data, year, gender), my_table)
map(my_table, data, year, gender)
map(c(gender, race_ethnic), my_table, data, year)
map(c("gender", "race_ethnic"), my_table, data, year)
my_table(data, year, c(gender, race_ethnic))
c(gender, race_ethnic, )
li <- c(gender, race_ethnic)
temp_table <- percent_grouping(data, year, gender) %>%
select(year, gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
temp_table
percent_grouping(data, year, gender)
percent_grouping(data, year, gender) %>%
select(year, gender, percent)
percent_grouping(data, year, gender) %>%
select(year, gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent)
# creates an ugly table that
temp_table <- percent_grouping(data, year, gender) %>%
select(gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
# creates an ugly table that
temp_table <- percent_grouping(data, year, gender) %>%
select(gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
# creates an ugly table that
temp_table <- percent_grouping(data, year, gender) %>%
select(year, gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
temp_table
table <- temp_table[2:3,]
colnames(table) <- temp_table[1,]
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) #gives me a stylized striped table
%>%
row_spec(0, angle = -45) #rotates column names
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) #gives me a stylized striped table
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F)  %>% #gives me a stylized striped table
row_spec(0, angle = -45) #rotates column names
?captilize
colnames(table) <- str_to_title(temp_table[1,])
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F)  %>% #gives me a stylized striped table
row_spec(0, angle = -45) #rotates column names
colnames(table) <- temp_table[1,]
colnames(table)
rownames(table) <- rownames(table) %>% str_to_title()
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F)  %>% #gives me a stylized striped table
row_spec(0, angle = -45) #rotates column names
percent_grouping <- function(data, var, grouping){
total_grouping(data, {{var}}, {{grouping}}) %>%
mutate(percent = n_group/n_total * 100,
percent_symbol = paste0(round(percent, 2), "%"))
}
percent_grouping(data, year, gender) %>% head()
percent_grouping(data, year, race_ethnic) %>% head()
percent_grouping <- function(data, var, grouping){
total_grouping(data, {{var}}, {{grouping}}) %>%
mutate(percent = n_group/n_total * 100,
percent = round(percent, 2),
percent = paste0(percent, "%"))
}
percent_grouping(data, year, gender) %>% head()
percent_grouping(data, year, race_ethnic) %>% head()
# creates an ugly first draft
temp_table <- percent_grouping(data, year, gender) %>%
select(year, gender, percent) %>%
pivot_wider(names_from = gender,
values_from = percent) %>% t(.)
temp_table
# moves the first row to the title
table <- temp_table[2:3,]
colnames(table) <- temp_table[1,]
rownames(table) <- rownames(table) %>% str_to_title()
#stylized table
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F)  %>% #gives me a stylized striped table
row_spec(0, angle = -45) #rotates column names
my_table <- function(data, var, grouping){
temp_table <- percent_grouping(data, {{var}}, {{grouping}}) %>%
select({{var}}, {{grouping}}, percent) %>%
pivot_wider(names_from = {{grouping}},
values_from = percent) %>% t(.)
table <- temp_table[2:nrow(temp_table),]
colnames(table) <- temp_table[1,]
rownames(table) <- rownames(table) %>% str_to_title()
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(0, angle = -45)
}
my_table(data, year, gender)
my_table(data, year, race_ethnic)
my_table(data, year, food_security)
my_table(data, year, race_ethnic)
my_table(data, year, gender)
table %>% kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(0, angle = -45)
map(list(c(data, year, gender),
c(data, year, race_ethnic)), my_table)
vapply(list(c(data, year, gender),
c(data, year, race_ethnic)), my_table)
install.packages("devtools")
devtools::install_github("gadenbuie/xaringanExtra")
