child_model_plot_df$nest_plot[[10]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
plotting <- function(df, gender, year){
ggplot(df, aes(x=hh_food_secure,
y=age,
color = race_ethnic))+
geom_jitter(alpha = 0.5)+
theme_minimal()+
theme(legend.position = 'none')+
labs(x = 'Food Secure Score (lower = more secure)',
y = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
plotting <- function(df, gender, year){
ggplot(df, aes(x=age,
y=hh_food_secure,#color = race_ethnic
))+
geom_jitter(alpha = 0.5)+
theme_minimal()+
theme(legend.position = 'none')+
labs(x = 'Food Secure Score (lower = more secure)',
y = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
child_model_plot_df <- child_model_df %>%
mutate(nest_plot = pmap(list(data,
gender,
year),
~{plotting(..1, ..2, ..3)})
)
ggpubr::ggarrange(child_model_plot_df$nest_plot[[9]],
child_model_plot_df$nest_plot[[10]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
ggpubr::ggarrange(child_model_plot_df$nest_plot[[1]],
child_model_plot_df$nest_plot[[2]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure))
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure))
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_point(alpha = 0.5)
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_point() +
geom_line()
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line()
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8)
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 2)
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5)
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5) %>%
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))}
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5) %>%
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5) %>%
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))}
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5) %>%
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ungroup() %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
#geom_point() +
geom_line(alpha = 0.8, size = 1.5) %>%
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))
#df %>%
child_model_df$data[[1]] %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": "))
}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
child_model_plot_df <- child_model_df %>%
mutate(nest_plot = pmap(list(data,
gender,
year),
~{plotting(..1, ..2, ..3)})
)
ggpubr::ggarrange(child_model_plot_df$nest_plot[[1]],
child_model_plot_df$nest_plot[[2]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
child_model_df = model_df %>% filter(age_group == 'child')
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": ")+
guides(color=guide_legend(nrow=2, byrow=TRUE)))
}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": ")) +
guides(color=guide_legend(nrow=2, byrow=TRUE))
}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
child_model_plot_df <- child_model_df %>%
mutate(nest_plot = pmap(list(data,
gender,
year),
~{plotting(..1, ..2, ..3)})
)
ggpubr::ggarrange(child_model_plot_df$nest_plot[[1]],
child_model_plot_df$nest_plot[[2]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
child_model_df = model_df %>% filter(age_group == 'child')
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": ")) +
guides(color=guide_legend(nrow=2, byrow=TRUE))
}
plotting(child_model_df$data[[1]], child_model_df$gender[[1]], child_model_df$year[[1]])
View(child_model_plot_df)
View(child_model_plot_df[[4]][[1]])
View(child_model_plot_df[[4]][[1]])
View(model_df)
model_df %>% select(year, gender, age_group, data) %>% unnest(data)
orig_df = model_df %>% select(year, gender, age_group, data) %>% unnest(data)
head(orig_df)
adult_model_df = model_df %>% filter(age_group == 'adult') %>% unnest(data)
View(adult_model_df)
remove(adult_model_df)
new_df = model_df %>%
filter(age_group == 'adult') %>%
select(year, gender, age_group, data) %>% unnest(data)
View(new_df)
head(new_df)
adult_model_df = new_df %>% group_by(years, gender, nest)
adult_model_df = new_df %>% group_by(years, gender) %>% nest()
adult_model_df = new_df %>% group_by(year, gender) %>% nest()
View(adult_model_df)
View(adult_model_df[[3]][[1]])
?map2
View(adult_model_df[[3]][[1]])
plotting <- function(df, gender, year){
p = df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.8, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic') +
guides(color=guide_legend(nrow=2, byrow=TRUE))
if(missing(year)){
p = p + labs(title = gender)
}else{
p = p + labs(title = paste(year, gender, sep = ": "))}
p
}
# make sure the funtion works for one row of data.
plotting(child_model_df$data[[1]],
child_model_df$gender[[1]],
child_model_df$year[[1]])
new_df %>%
group_by(year, gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
plotting()))
new_df %>%
group_by(year, gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
plotting(.x, .y)))
new_df %>%
group_by(year, gender) %>%
nest() %>% View()
new_df %>%
group_by(year, gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
~plotting(.x, .y)))
adult_plot_df = adult_df %>%
group_by(year, gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
~plotting(.x, .y)))
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
adult_plot_df$nest_plot[[17]],
adult_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
adult_df = model_df %>%
filter(age_group == 'adult') %>%
select(year, gender, age_group, data) %>% unnest(data)
head(adult_df)
adult_plot_df = adult_df %>%
group_by(year, gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
~plotting(.x, .y)))
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
adult_plot_df$nest_plot[[17]],
adult_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2)
View(adult_plot_df)
plotting <- function(df, gender, year){
df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.7, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic',
title = paste(year, gender, sep = ": ")) +
guides(color=guide_legend(nrow=2, byrow=TRUE))
}
adult_plot_df = adult_df %>%
group_by(gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
~plotting(.x, .y)))
plotting <- function(df, gender, year = NULL){
p = df %>%
group_by(age, race_ethnic) %>%
summarise(m = mean(hh_food_secure),
sd = sd(hh_food_secure)) %>%
ggplot(aes(x=age,
y=m,
color = race_ethnic))+
geom_line(alpha = 0.7, size = 1.5) +
theme_minimal()+
theme(legend.position = 'top')+
labs(x = 'Age',
y = 'Food Secure Score (lower = more secure)',
color = 'Race and Ethnic') +
guides(color=guide_legend(nrow=2, byrow=TRUE))
if(missing(year)){
p = p + labs(title = gender)
}else{
p = p + labs(title = paste(year, gender, sep = ": "))}
p
}
adult_plot_df = adult_df %>%
group_by(gender) %>%
nest() %>%
mutate(nest_plot = map2(data, gender,
~plotting(.x, .y)))
View(adult_plot_df)
View(child_model_plot_df)
View(adult_plot_df)
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]]
ncol = 2)
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
ncol = 2)
View(adult_plot_df)
View(adult_model_df)
TRUE
unlink('_posts/parallel-iteration/parallel-iteration_cache', recursive = TRUE)
model_df %>% ggplot(aes(x=year, y=slope, color=age_group, group = age_group)) +
geom_line(size = 1.5) +
facet_wrap(~gender) +
theme_minimal()+
theme(legend.position = 'bottom') +
labs(y = 'Slope between Age and Food Security',
x = 'Year',
color = 'Age Group')
create_post("Parallel iterations")
library(distill)
create_post("Parallel iterations")
?ggarrange
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
ncol = 2) %>%
annotate_figure(bottom = 'Lower = more secure')
library(tidyverse)
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
ncol = 2) %>%
annotate_figure(bottom = 'Lower = more secure')
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
ncol = 2)
ggpubr::ggarrange(adult_plot_df$nest_plot[[1]],
adult_plot_df$nest_plot[[2]],
ncol = 2,
common.legend = TRUE)
unlink('_posts/parallel-iteration/parallel-iteration_cache', recursive = TRUE)
model_df %>% ggplot(aes(x=year, y=slope, color=age_group, group = age_group)) +
geom_line(size = 1.5) +
facet_wrap(gender~) +
theme(legend.position = 'bottom') +
labs(y = 'Slope between Age and Food Security',
x = 'Year',
color = 'Age Group')
?facet_wrap
model_df %>% ggplot(aes(x=year, y=slope, color=age_group, group = age_group)) +
geom_line(size = 1.5) +
facet_wrap(~gender, nrow = 2) +
theme(legend.position = 'bottom') +
labs(y = 'Slope between Age and Food Security',
x = 'Year',
color = 'Age Group')
?ggarrange
ggpubr::ggarrange(child_model_plot_df$nest_plot[[1]],
child_model_plot_df$nest_plot[[2]],
child_model_plot_df$nest_plot[[17]],
child_model_plot_df$nest_plot[[18]],
ncol = 2, nrow = 2,
common.legend = TRUE,
legend = 'bottom')
install.packages("distill")
distill::create_theme("style")
distill::render_site()
render_site()
??render_site
rmarkdown::render_site()
rmarkdown::render_site("posts.Rmd")
rmarkdown::render_site()
distill::render_site()
render_site()
??render_site
rmarkdown::render_site()
rmarkdown::render_site("posts.Rmd")
rmarkdown::render_site()
rmarkdown::render_site("tutorials.Rmd")
rmarkdown::render_site("tutorials.Rmd")
render_site("posts/")
rmarkdown::render_site("posts")
rmarkdown::render_site("posts/")
rmarkdown::render_site("tutorials.Rmd")
rmarkdown::render_site()
install.packages("devtools")
devtools::install_github("gadenbuie/xaringanExtra")
# devtools::install_github("gadenbuie/xaringanExtra")
library(xaringanExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fs)
library(knitr)
# devtools::install_github("gadenbuie/xaringanExtra")
xaringanExtra::use_clipboard()
(rootpath <- here::here("data"))
fnames <- fs::dir_ls(rootpath)
head(fnames)
names(head(fnames))
fnames
str(fnames)
# list filenames that contain
demo_paths <- dir_ls(rootpath, regexp = "DEMO")
demos
demos_p
demo_paths
# list file paths for files that contain the pattern "DEMO"
demo_paths <- dir_ls(rootpath, regexp = "DEMO")
# list file paths for files that contain the pattern "FSQ"
fsq_paths <- dir_ls(rootpath, regexp = "FSQ")
demos_list <- map(demo_paths, rio::import)
fsq_list <- map(demo_paths, rio::import)
demos <- map_dfr(demo_paths, rio::import, .id = "file")
kable(head(demos[,1:4]))
fsq <- map_dfr(fsq_paths, rio::import, .id = "file")
View(demos)
?map2
